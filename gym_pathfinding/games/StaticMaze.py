import numpy as np

class static_grid:
    def __init__(self, random_seed=20190312):
        np.random.seed(random_seed)
        self.maze = np.array([[ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],
                        [ 1.,  10., 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],
                        [ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.],
                        [ 1.,  0.,  1.,  1.,  1.,  0.,  1.,  1.,  1.,  1.,  0.,  0.,  1.],
                        [ 1.,  0.,  1.,  1.,  1.,  0.,  1.,  1.,  1.,  1.,  0.,  0.,  1.],
                        [ 1.,  0.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  0.,  0.,  1.],
                        [ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.],
                        [ 1.,  0.,  1.,  1.,  0.,  1.,  1.,  1.,  1.,  1.,  0.,  0.,  1.],
                        [ 1.,  0.,  1.,  1.,  0.,  1.,  1.,  1.,  1.,  1.,  0.,  0.,  1.],
                        [ 1.,  0.,  1.,  1.,  0.,  1.,  1.,  1.,  1.,  1.,  0.,  0.,  1.],
                        [ 1.,  0.,  1.,  1.,  0.,  1.,  1.,  1.,  1.,  1.,  0.,  0.,  1.],
                        [ 1.,  0.,  1.,  1., 0.,  1.,  1.,  1.,  1.,  1.,  0.,  0.,  1.],
                        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.]])
        self.random_seed = random_seed

    def start_point(self):
        start = self.maze != 1
        start[:, 1] = False
        start_pos = np.argwhere(start)
        np.random.shuffle(start_pos)
        return tuple(start_pos[0].tolist())

    def end_point(self):
        return (1, 1)